[uwsgi]

; the socket use the full path to be safe
; 使用nginx连接时使用 转发给nginx的端口号
; socket = /var/www/chinslickingweb/chinslickingweb.sock
socket = :8023
; 直接做web服务器使用 直接访问uwsgi的端口号，绕过nginx
http = :8024

; django-related settings
; the base directory full path 项目的绝对路径
chdir = /var/www/chinslickingweb

; 项目的settings模块路径
; env = DJANGO_SETTINGS_MODULE=project_name.settings
; django's wsgi file wsgi的application模块路径
module = chinslickingweb.wsgi
; 项目中wsgi.py文件的目录，相对于项目目录 Django项目wsgi.py文件的相对路径
; wsgi-file = chinslickingweb/wsgi.py

; the virtualenv full path
; home = /root/.local/share/virtualenvs/chinslickingweb-X0XLUAMh
virtualenv = /root/.local/share/virtualenvs/chinslickingweb-X0XLUAMh
; pythonpath = /usr/bin/python
;
; gevent协程支持，最大100个
; gevent=100
; gevent协程补丁
; gevent-monkey-patch
;
; process-related settings
; 监听队列 设置socket的监听队列大小（默认：100）
; listen = 300
; 是否使用主线程 以独立守护进程运行
master = true
; maximum number of worker processes 进程数
processes = 4

; workers
; 允许在请求中开启新线程
enable-threads = true
; 每个进程的线程数
threads = 2

; 监听端口
; stats = 127.0.0.1:9100
stats = %(chdir)/uwsgi.status
; stats = uwsgi.status

pidfile = %(chdir)/uwsgi.pid
; pidfile = /var/www/chinslickingweb/uwsgi/uwsgi.pid
; pidfile = uwsgi.pid

; 设置在平滑的重启（直到接收到的请求处理完才重启）一个工作子进程中，等待这个工作结束的最长秒数。
; 这个配置会使在平滑地重启工作子进程中，如果工作进程结束时间超过了8秒就会被
; 强行结束（忽略之前已经接收到的请求而直接结束）
; reload-mercy = 8
; 为每个工作进程设置请求数的上限。当一个工作进程处理的请求数达到这个值，那么该工作进程就会被回收重用（重启）。
; 你可以使用这个选项来默默地对抗内存泄漏
; max-requests = 5000
; 通过使用POSIX/UNIX的setrlimit()函数来限制每个uWSGI进程的虚拟内存使用数。
; 这个配置会限制uWSGI的进程占用虚拟内存不超过256M。
; 如果虚拟内存已经达到256M，并继续申请虚拟内存则会使程序报内存错误，本次的http请求将返回500错误。
; limit-as = 256
; 一个请求花费的时间超过了这个harakiri超时时间，那么这个请求都会被丢弃，并且当前处理这个请求的工作进程会
; 被回收再利用（即重启）
;
; with appropriate permissions - may be needed
chmod-socket = 666
; clear environment on exit 每次退出时是否清理环境配置
vacuum = true
harakiri = 30

; 目录中一旦有文件被改动就自动重启
touch-reload = %(chdir)
py-autoreload = 1

; 在每个worker而不是master中加载应用
; lazy-apps = true
; 设置用于uwsgi包解析的内部缓存区大小为64k。默认是4k。
; buffer-size = 32768
;
; 存放日志
;logto = %(chdir)/uwsgi/uwsgi.log
; 日志记录请求的内存等详细信息
; memory-report
; 禁用请求日志记录
disable-logging = true
; 以固定的文件大小（单位KB）log-maxsize = 50000000 就是50M一个日志文件
log-maxsize = 50000000

daemonize = %(chdir)/uwsgi.log
; daemonize = /var/www/chinslickingweb/uwsgi/uwsgi.log
; daemonize = uwsgi.log
